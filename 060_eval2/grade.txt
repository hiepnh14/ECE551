Grading at 10/27/2023:17:13:35.319060
For commit ID e9fa14fde29b047326d95dcffb13a7b1773f7c17
Grading at Fri Oct 27 01:13:24 PM EDT 2023
Doing some basic checking for your submission

Step 1
Checking that story-step1 compiles
rm -f *~ story-step1 story-step2 story-step3  story-step1.o story-step2.o story-step3.o rand_story.o
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c rand_story.c
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c story-step1.c
gcc -o story-step1 story-step1.o rand_story.o provided.o
rm story-step1.o
The code compiled (good)
Executable story-step1 exists (good)
Checking with provided test case story.txt
Your file matched the expected output
Now running YOUR tests for step 1

1.1: Current test is story-step1 story.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind reported errors or memory leaks:
==862065== Memcheck, a memory error detector
==862065== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==862065== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==862065== Command: ./story-step1 story.txt
==862065== Parent PID: 862064
==862065== 
==862065== Invalid read of size 1
==862065==    at 0x484ED76: __strlen_sse2 (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==862065==    by 0x109664: parsing (rand_story.c:56)
==862065==    by 0x109439: main (story-step1.c:14)
==862065==  Address 0x4a8f260 is 0 bytes after a block of size 0 alloc'd
==862065==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==862065==    by 0x1095AE: parsing (rand_story.c:36)
==862065==    by 0x109439: main (story-step1.c:14)
==862065== 
==862065== Invalid write of size 1
==862065==    at 0x10956A: category (rand_story.c:28)
==862065==    by 0x1095CD: parsing (rand_story.c:41)
==862065==    by 0x109439: main (story-step1.c:14)
==862065==  Address 0x4a90d71 is 0 bytes after a block of size 1 alloc'd
==862065==    at 0x484DCD3: realloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==862065==    by 0x10951B: category (rand_story.c:21)
==862065==    by 0x1095CD: parsing (rand_story.c:41)
==862065==    by 0x109439: main (story-step1.c:14)
==862065== 
==862065== 
==862065== HEAP SUMMARY:
==862065==     in use at exit: 0 bytes in 0 blocks
==862065==   total heap usage: 85 allocs, 85 frees, 10,590 bytes allocated
==862065== 
==862065== All heap blocks were freed -- no leaks are possible
==862065== 
==862065== For lists of detected and suppressed errors, rerun with: -s
==862065== ERROR SUMMARY: 21 errors from 2 contexts (suppressed: 0 from 0)

1.2: Current test is story-step1 story2.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind reported errors or memory leaks:
==862105== Memcheck, a memory error detector
==862105== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==862105== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==862105== Command: ./story-step1 story2.txt
==862105== Parent PID: 862104
==862105== 
==862105== Invalid read of size 1
==862105==    at 0x484ED76: __strlen_sse2 (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==862105==    by 0x109664: parsing (rand_story.c:56)
==862105==    by 0x109439: main (story-step1.c:14)
==862105==  Address 0x4a8f260 is 0 bytes after a block of size 0 alloc'd
==862105==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==862105==    by 0x1095AE: parsing (rand_story.c:36)
==862105==    by 0x109439: main (story-step1.c:14)
==862105== 
==862105== Invalid write of size 1
==862105==    at 0x10956A: category (rand_story.c:28)
==862105==    by 0x1095CD: parsing (rand_story.c:41)
==862105==    by 0x109439: main (story-step1.c:14)
==862105==  Address 0x4a90d71 is 0 bytes after a block of size 1 alloc'd
==862105==    at 0x484DCD3: realloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==862105==    by 0x10951B: category (rand_story.c:21)
==862105==    by 0x1095CD: parsing (rand_story.c:41)
==862105==    by 0x109439: main (story-step1.c:14)
==862105== 
==862105== 
==862105== HEAP SUMMARY:
==862105==     in use at exit: 0 bytes in 0 blocks
==862105==   total heap usage: 139 allocs, 139 frees, 14,316 bytes allocated
==862105== 
==862105== All heap blocks were freed -- no leaks are possible
==862105== 
==862105== For lists of detected and suppressed errors, rerun with: -s
==862105== ERROR SUMMARY: 30 errors from 2 contexts (suppressed: 0 from 0)

1.3: Current test is story-step1 story3.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind reported errors or memory leaks:
==862129== Memcheck, a memory error detector
==862129== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==862129== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==862129== Command: ./story-step1 story3.txt
==862129== Parent PID: 862128
==862129== 
==862129== Invalid read of size 1
==862129==    at 0x484ED76: __strlen_sse2 (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==862129==    by 0x109664: parsing (rand_story.c:56)
==862129==    by 0x109439: main (story-step1.c:14)
==862129==  Address 0x4a8f260 is 0 bytes after a block of size 0 alloc'd
==862129==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==862129==    by 0x1095AE: parsing (rand_story.c:36)
==862129==    by 0x109439: main (story-step1.c:14)
==862129== 
==862129== Invalid write of size 1
==862129==    at 0x10956A: category (rand_story.c:28)
==862129==    by 0x1095CD: parsing (rand_story.c:41)
==862129==    by 0x109439: main (story-step1.c:14)
==862129==  Address 0x4a90891 is 0 bytes after a block of size 1 alloc'd
==862129==    at 0x484DCD3: realloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==862129==    by 0x10951B: category (rand_story.c:21)
==862129==    by 0x1095CD: parsing (rand_story.c:41)
==862129==    by 0x109439: main (story-step1.c:14)
==862129== 
==862129== 
==862129== HEAP SUMMARY:
==862129==     in use at exit: 0 bytes in 0 blocks
==862129==   total heap usage: 80 allocs, 80 frees, 10,636 bytes allocated
==862129== 
==862129== All heap blocks were freed -- no leaks are possible
==862129== 
==862129== For lists of detected and suppressed errors, rerun with: -s
==862129== ERROR SUMMARY: 16 errors from 2 contexts (suppressed: 0 from 0)

1.4: Current test is story-step1 story4.txt
-----------------------------
Great: we both considered this an error
Lets check if it valgrinds:
Valgrind reported errors:
==862153== Memcheck, a memory error detector
==862153== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==862153== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==862153== Command: ./story-step1 story4.txt
==862153== Parent PID: 862152
==862153== 
==862153== Invalid read of size 1
==862153==    at 0x484ED76: __strlen_sse2 (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==862153==    by 0x109664: parsing (rand_story.c:56)
==862153==    by 0x109439: main (story-step1.c:14)
==862153==  Address 0x4a8f260 is 0 bytes after a block of size 0 alloc'd
==862153==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==862153==    by 0x1095AE: parsing (rand_story.c:36)
==862153==    by 0x109439: main (story-step1.c:14)
==862153== 
==862153== Invalid write of size 1
==862153==    at 0x10956A: category (rand_story.c:28)
==862153==    by 0x1095CD: parsing (rand_story.c:41)
==862153==    by 0x109439: main (story-step1.c:14)
==862153==  Address 0x4a90dd1 is 0 bytes after a block of size 1 alloc'd
==862153==    at 0x484DCD3: realloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==862153==    by 0x10951B: category (rand_story.c:21)
==862153==    by 0x1095CD: parsing (rand_story.c:41)
==862153==    by 0x109439: main (story-step1.c:14)
==862153== 
==862153== 
==862153== HEAP SUMMARY:
==862153==     in use at exit: 507 bytes in 3 blocks
==862153==   total heap usage: 38 allocs, 35 frees, 5,101 bytes allocated
==862153== 
==862153== For a detailed leak analysis, rerun with: --leak-check=full
==862153== 
==862153== For lists of detected and suppressed errors, rerun with: -s
==862153== ERROR SUMMARY: 4 errors from 2 contexts (suppressed: 0 from 0)

1.5: Current test is story-step1 story5.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind reported errors or memory leaks:
==862171== Memcheck, a memory error detector
==862171== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==862171== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==862171== Command: ./story-step1 story5.txt
==862171== Parent PID: 862170
==862171== 
==862171== Invalid read of size 1
==862171==    at 0x484ED76: __strlen_sse2 (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==862171==    by 0x109664: parsing (rand_story.c:56)
==862171==    by 0x109439: main (story-step1.c:14)
==862171==  Address 0x4a8f260 is 0 bytes after a block of size 0 alloc'd
==862171==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==862171==    by 0x1095AE: parsing (rand_story.c:36)
==862171==    by 0x109439: main (story-step1.c:14)
==862171== 
==862171== Invalid write of size 1
==862171==    at 0x10956A: category (rand_story.c:28)
==862171==    by 0x1095CD: parsing (rand_story.c:41)
==862171==    by 0x109439: main (story-step1.c:14)
==862171==  Address 0x4a905a1 is 0 bytes after a block of size 1 alloc'd
==862171==    at 0x484DCD3: realloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==862171==    by 0x10951B: category (rand_story.c:21)
==862171==    by 0x1095CD: parsing (rand_story.c:41)
==862171==    by 0x109439: main (story-step1.c:14)
==862171== 
==862171== 
==862171== HEAP SUMMARY:
==862171==     in use at exit: 0 bytes in 0 blocks
==862171==   total heap usage: 34 allocs, 34 frees, 9,139 bytes allocated
==862171== 
==862171== All heap blocks were freed -- no leaks are possible
==862171== 
==862171== For lists of detected and suppressed errors, rerun with: -s
==862171== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

1.6: Current test is story-step1 story6.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind reported errors or memory leaks:
==862204== Memcheck, a memory error detector
==862204== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==862204== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==862204== Command: ./story-step1 story6.txt
==862204== Parent PID: 862203
==862204== 
==862204== Invalid read of size 1
==862204==    at 0x484ED76: __strlen_sse2 (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==862204==    by 0x109664: parsing (rand_story.c:56)
==862204==    by 0x109439: main (story-step1.c:14)
==862204==  Address 0x4a8f260 is 0 bytes after a block of size 0 alloc'd
==862204==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==862204==    by 0x1095AE: parsing (rand_story.c:36)
==862204==    by 0x109439: main (story-step1.c:14)
==862204== 
==862204== Invalid write of size 1
==862204==    at 0x10956A: category (rand_story.c:28)
==862204==    by 0x1095CD: parsing (rand_story.c:41)
==862204==    by 0x109439: main (story-step1.c:14)
==862204==  Address 0x4a90951 is 0 bytes after a block of size 1 alloc'd
==862204==    at 0x484DCD3: realloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==862204==    by 0x10951B: category (rand_story.c:21)
==862204==    by 0x1095CD: parsing (rand_story.c:41)
==862204==    by 0x109439: main (story-step1.c:14)
==862204== 
==862204== 
==862204== HEAP SUMMARY:
==862204==     in use at exit: 0 bytes in 0 blocks
==862204==   total heap usage: 36 allocs, 36 frees, 9,151 bytes allocated
==862204== 
==862204== All heap blocks were freed -- no leaks are possible
==862204== 
==862204== For lists of detected and suppressed errors, rerun with: -s
==862204== ERROR SUMMARY: 3 errors from 2 contexts (suppressed: 0 from 0)

1.7: Current test is story-step1 none.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind reported errors or memory leaks:
==862222== Memcheck, a memory error detector
==862222== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==862222== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==862222== Command: ./story-step1 none.txt
==862222== Parent PID: 862221
==862222== 
==862222== Invalid read of size 1
==862222==    at 0x484ED76: __strlen_sse2 (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==862222==    by 0x48E3A18: fputs (iofputs.c:33)
==862222==    by 0x109453: main (story-step1.c:15)
==862222==  Address 0x4a8f260 is 0 bytes after a block of size 0 alloc'd
==862222==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==862222==    by 0x1095AE: parsing (rand_story.c:36)
==862222==    by 0x109439: main (story-step1.c:14)
==862222== 
==862222== 
==862222== HEAP SUMMARY:
==862222==     in use at exit: 0 bytes in 0 blocks
==862222==   total heap usage: 3 allocs, 3 frees, 4,568 bytes allocated
==862222== 
==862222== All heap blocks were freed -- no leaks are possible
==862222== 
==862222== For lists of detected and suppressed errors, rerun with: -s
==862222== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

1.8: Current test is story-step1 
-----------------------------
Great: we both considered this an error
Lets check if it valgrinds:
Valgrind was clean

Step 2
Checking that story-step2 compiles
rm -f *~ story-step1 story-step2 story-step3  story-step1.o story-step2.o story-step3.o rand_story.o
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c rand_story.c
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c story-step2.c
gcc -o story-step2 story-step2.o rand_story.o provided.o
rm story-step2.o
The code compiled (good)
Executable story-step2 exists (good)
Now running YOUR tests for step 2

2.1: Current test is story-step2 words.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean

2.2: Current test is story-step2 words1.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean

2.3: Current test is story-step2 words2.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind reported errors or memory leaks:
==862332== Memcheck, a memory error detector
==862332== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==862332== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==862332== Command: ./story-step2 words2.txt
==862332== Parent PID: 862331
==862332== 
==862332== Invalid read of size 1
==862332==    at 0x484ED76: __strlen_sse2 (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==862332==    by 0x48DAD30: __vfprintf_internal (vfprintf-internal.c:1517)
==862332==    by 0x48C479E: printf (printf.c:33)
==862332==    by 0x10A001: printWords (provided.c:49)
==862332==    by 0x1093DA: main (story-step2.c:11)
==862332==  Address 0x4a903b0 is 0 bytes after a block of size 0 alloc'd
==862332==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==862332==    by 0x10966E: readWords (rand_story.c:71)
==862332==    by 0x109B6F: readFile (rand_story.c:158)
==862332==    by 0x1093CE: main (story-step2.c:10)
==862332== 
==862332== 
==862332== HEAP SUMMARY:
==862332==     in use at exit: 0 bytes in 0 blocks
==862332==   total heap usage: 14 allocs, 14 frees, 8,852 bytes allocated
==862332== 
==862332== All heap blocks were freed -- no leaks are possible
==862332== 
==862332== For lists of detected and suppressed errors, rerun with: -s
==862332== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

2.4: Current test is story-step2 words3.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean

2.5: Current test is story-step2 words4.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean

2.6: Current test is story-step2 words5.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean

2.7: Current test is story-step2 words.txt words.txt
-----------------------------
Great: we both considered this an error
Lets check if it valgrinds:
Valgrind was clean

Step 3
Checking that story-step3 compiles
rm -f *~ story-step1 story-step2 story-step3  story-step1.o story-step2.o story-step3.o rand_story.o
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c rand_story.c
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c story-step3.c
gcc -o story-step3 story-step3.o rand_story.o provided.o
rm story-step3.o
The code compiled (good)
Executable story-step3 exists (good)
Now running YOUR tests for step 3

3.1: Current test is story-step3 words.txt story2.txt
-----------------------------
You considered this a failure case:
Category 1 not found
But we did not.

3.2: Current test is story-step3 words.txt story.txt
-----------------------------
It looks like you got different output from us on that case.
Here is the diff (yours on left, ours on right):

i5]Once upon a time, there was a walrus who lived in a very p |	Once upon a time, there was a walrus who lived in a very pecu
cave. 								cave. 
Your file did not match the expected output


3.3: Current test is story-step3 words5 story.txt
-----------------------------
Great: we both considered this an error
Lets check if it valgrinds:
Valgrind was clean

3.4: Current test is story-step3 words none.txt
-----------------------------
Great: we both considered this an error
Lets check if it valgrinds:
Valgrind was clean

Step 4
Checking that story-step4 compiles
rm -f *~ story-step1 story-step2 story-step3  story-step1.o story-step2.o story-step3.o rand_story.o
The code did not compile!

Overall Grade: NO GRADE YET
