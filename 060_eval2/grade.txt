Grading at 11/05/2023:21:19:46.680043
For commit ID bd425168b8ea360787829552a4f675ec5051caf8
Grading at Sun Nov  5 04:19:07 PM EST 2023

=========================================================================
Step 1

Checking that story-step1 compiles
rm -f *~ story-step1 story-step2 story-step3 story-step4 story-step1.o story-step2.o story-step3.o story-step4.o rand_story.o
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c rand_story.c
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c story-step1.c
gcc -o story-step1 story-step1.o rand_story.o provided.o
rm story-step1.o
+-----------------------------------------------------------------------+
Test case 1.1
Your program successfully indicated a failure case
                                                         [0.5/0.5]
+-----------------------------------------------------------------------+
Test case 1.2
Your program successfully indicated a failure case
                                                         [0.5/0.5]
+-----------------------------------------------------------------------+
Test case 1.3
Your program successfully indicated a failure case
                                                         [1/1]
+-----------------------------------------------------------------------+
Test case 1.4
Your program did not indicate a failure case
                                                         [0/3]
+-----------------------------------------------------------------------+
Test case 1.5
Your file matched the expected output
                                                         [4/4]
+-----------------------------------------------------------------------+
Test case 1.6
Your file matched the expected output
                                                         [4/4]
+-----------------------------------------------------------------------+
Test case 1.7
Valgrind reported memory errors
Your file did not match the expected output
                                                         [0/4]
+-----------------------------------------------------------------------+
Test case 1.8
Your file matched the expected output
                                                         [2/2]
+-----------------------------------------------------------------------+
Test case 1.9
Your file matched the expected output
                                                         [2/2]
+-----------------------------------------------------------------------+
Test case 1.10
Your file matched the expected output
                                                         [2/2]
+-----------------------------------------------------------------------+
Test case 1.11
Your file matched the expected output
                                                         [2/2]

Step 1 total                                             [18.0/25]

=========================================================================
Step 2

Checking that story-step2 compiles
rm -f *~ story-step1 story-step2 story-step3 story-step4 story-step1.o story-step2.o story-step3.o story-step4.o rand_story.o
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c rand_story.c
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c story-step2.c
gcc -o story-step2 story-step2.o rand_story.o provided.o
rm story-step2.o
+-----------------------------------------------------------------------+
Test case 2.1
Your program successfully indicated a failure case
                                                         [0.5/0.5]
+-----------------------------------------------------------------------+
Test case 2.2
Your program successfully indicated a failure case
                                                         [0.5/0.5]
+-----------------------------------------------------------------------+
Test case 2.3
Your program successfully indicated a failure case
                                                         [1/1]
+-----------------------------------------------------------------------+
Test case 2.4
Your program successfully indicated a failure case
                                                         [3/3]
+-----------------------------------------------------------------------+
Test case 2.5
Your file matched the expected output
                                                         [4/4]
+-----------------------------------------------------------------------+
Test case 2.6
Your file matched the expected output
                                                         [2/2]
+-----------------------------------------------------------------------+
Test case 2.7
Your file matched the expected output
                                                         [2/2]
+-----------------------------------------------------------------------+
Test case 2.8
Your file matched the expected output
                                                         [2/2]
+-----------------------------------------------------------------------+
Test case 2.9
Your file matched the expected output
                                                         [2/2]
+-----------------------------------------------------------------------+
Test case 2.10
Your file matched the expected output
                                                         [2/2]
+-----------------------------------------------------------------------+
Test case 2.11
Your file matched the expected output
                                                         [1/1]

Step 2 total                                             [20.0/20]

=========================================================================
Step 3

Checking that story-step3 compiles
rm -f *~ story-step1 story-step2 story-step3 story-step4 story-step1.o story-step2.o story-step3.o story-step4.o rand_story.o
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c rand_story.c
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c story-step3.c
gcc -o story-step3 story-step3.o rand_story.o provided.o
rm story-step3.o
+-----------------------------------------------------------------------+
Test case 3.1
Your program successfully indicated a failure case
                                                         [0.5/0.5]
+-----------------------------------------------------------------------+
Test case 3.2
Your program successfully indicated a failure case
                                                         [0.5/0.5]
+-----------------------------------------------------------------------+
Test case 3.3
Your program successfully indicated a failure case
                                                         [1/1]
+-----------------------------------------------------------------------+
Test case 3.4
Your program successfully indicated a failure case
                                                         [2/2]
+-----------------------------------------------------------------------+
Test case 3.5
Your program successfully indicated a failure case
                                                         [2/2]
+-----------------------------------------------------------------------+
Test case 3.6
Your file matched the expected output
                                                         [3/3]
+-----------------------------------------------------------------------+
Test case 3.7
Your file matched the expected output
                                                         [3/3]
+-----------------------------------------------------------------------+
Test case 3.8
Your file matched the expected output
                                                         [3/3]
+-----------------------------------------------------------------------+
Test case 3.9
Valgrind reported memory errors
Your file did not match the expected output
                                                         [0/2]
+-----------------------------------------------------------------------+
Test case 3.10
Your file matched the expected output
                                                         [2/2]
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c story-step3.c
gcc -o story-step3 story-step3.o rand_story.o provided.o
rm story-step3.o
+-----------------------------------------------------------------------+
Test case 3.11
Your file matched the expected output
                                                         [2/2]
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c story-step3.c
gcc -o story-step3 story-step3.o rand_story.o provided.o
rm story-step3.o
+-----------------------------------------------------------------------+
Test case 3.12
Your file matched the expected output
                                                         [2/2]
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c story-step3.c
gcc -o story-step3 story-step3.o rand_story.o provided.o
rm story-step3.o
+-----------------------------------------------------------------------+
Test case 3.13
Your file matched the expected output
                                                         [2/2]
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c story-step1.c
gcc -o story-step1 story-step1.o rand_story.o provided.o
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c story-step2.c
gcc -o story-step2 story-step2.o rand_story.o provided.o
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c story-step4.c
gcc -o story-step4 story-step4.o rand_story.o provided.o
rm story-step4.o story-step1.o story-step2.o

Step 3 total                                             [23.0/25]

=========================================================================
Step 4

Checking that story-step4 compiles
rm -f *~ story-step1 story-step2 story-step3 story-step4 story-step1.o story-step2.o story-step3.o story-step4.o rand_story.o
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c rand_story.c
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c story-step4.c
gcc -o story-step4 story-step4.o rand_story.o provided.o
rm story-step4.o
+-----------------------------------------------------------------------+
Test case 4.1
Your program successfully indicated a failure case
                                                         [0.5/0.5]
+-----------------------------------------------------------------------+
Test case 4.2
Valgrind reported memory errors
Your program successfully indicated a failure case
                                                         [.40/0.5]
+-----------------------------------------------------------------------+
Test case 4.3
Your program successfully indicated a failure case
                                                         [0.5/0.5]
+-----------------------------------------------------------------------+
Test case 4.4
Your program successfully indicated a failure case
                                                         [0.5/0.5]
+-----------------------------------------------------------------------+
Test case 4.5
Your program successfully indicated a failure case
                                                         [2/2]
+-----------------------------------------------------------------------+
Test case 4.6
Your file matched the expected output
                                                         [2/2]
+-----------------------------------------------------------------------+
Test case 4.7
Your file matched the expected output
                                                         [2/2]
+-----------------------------------------------------------------------+
Test case 4.8
Your file matched the expected output
                                                         [4/4]
+-----------------------------------------------------------------------+
Test case 4.9
Your file matched the expected output
                                                         [4/4]
+-----------------------------------------------------------------------+
Test case 4.10
Your file matched the expected output
                                                         [4/4]

Step 4 total                                             [19.90/20]

=========================================================================
Code quality

Abstration:    OK
Naming:        Excellent
Formatting:    Excellent
Documentation: Excellent
Comments from your grader:
Nice work! Good abstraction with most code in rand_story.c, but could be 
improved by reusing code between the steps. For example, extract error fprintf 
and exit into one single function. And you should avoid giant functions that 
are about 100 lines. Variable names are meaningful. Formatting is standard. 
Documentation is clear. Recommend doing 'make clean' before adding to Git.
Quality total                                            [9.3/10]

=========================================================================

Overall Grade: 90
