Grading at 12/04/2023:19:40:00.191317
For commit ID 0f48fdb84613a1c7093b0ee3d988188fe388f5a3
Grading at Mon Dec  4 02:38:39 PM EST 2023
Doing some basic checking for your submission

Step 1
Checking that cyoa-step1 compiles
rm -f *~ cyoa-step1 cyoa-step2 cyoa-step3  cyoa-step1.o cyoa-step2.o cyoa-step3.o cyoa.o
g++    -c -o cyoa-step1.o cyoa-step1.cpp
g++ -std=gnu++11 -pedantic -Wall -Werror -ggdb3 -c cyoa.cpp
g++ -o cyoa-step1 cyoa-step1.o cyoa.o
rm cyoa.o cyoa-step1.o
The code compiled (good)
Executable cyoa-step1 exists (good)
------------------------------------
Now running YOUR tests for step 1
------------------------------------


1.1: Current test is ./cyoa-step1 story1 < /dev/null
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean


1.2: Current test is ./cyoa-step1 story2 < /dev/null
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean


1.3: Current test is ./cyoa-step1 brokenstory < /dev/null
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
Fail to open story.txt file

-----------------------------------------
Lets check if it valgrinds:
Valgrind was clean


1.4: Current test is ./cyoa-step1 story1 story2 < /dev/null
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
Invalid input command

-----------------------------------------
Lets check if it valgrinds:
Valgrind was clean


1.5: Current test is ./cyoa-step1  < /dev/null
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
Invalid input command

-----------------------------------------
Lets check if it valgrinds:
Valgrind was clean


1.6: Current test is ./cyoa-step1 test/NoDelimiter < /dev/null
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
Invalid digits from story.txt
-----------------------------------------
Lets check if it valgrinds:
Valgrind was clean


1.7: Current test is ./cyoa-step1 test/no_story < /dev/null
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
Fail to open story.txt file

-----------------------------------------
Lets check if it valgrinds:
Valgrind was clean


1.8: Current test is ./cyoa-step1 test/pageDeclareOrder < /dev/null
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
Declaration order incorrect

-----------------------------------------
Lets check if it valgrinds:
Valgrind was clean


1.9: Current test is ./cyoa-step1 test/size_t_2 < /dev/null
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
Invalid digits from story.txt
-----------------------------------------
Lets check if it valgrinds:
Valgrind was clean


1.10: Current test is ./cyoa-step1 test/typeOfPage < /dev/null
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
Story page input format invalid
-----------------------------------------
Lets check if it valgrinds:
Valgrind was clean


1.11: Current test is ./cyoa-step1 test/WLnoChoice < /dev/null
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
Adding choice to Non-Normal page

-----------------------------------------
Lets check if it valgrinds:
Valgrind was clean


1.12: Current test is ./cyoa-step1 test/number < /dev/null
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
Invalid digits from story.txt
-----------------------------------------
Lets check if it valgrinds:
Valgrind was clean


1.13: Current test is ./cyoa-step1 test/pageNum < /dev/null
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
Invalid digits from story.txt
-----------------------------------------
Lets check if it valgrinds:
Valgrind was clean


1.14: Current test is ./cyoa-step1 test/story1 < /dev/null
-----------------------------
You considered this a failure case:
Invalid digits from story.txt
But we did not.


1.15: Current test is ./cyoa-step1 test/filename < /dev/null
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
Fail to open File
-----------------------------------------
Lets check if it valgrinds:
Valgrind was clean


1.16: Current test is ./cyoa-step1 test/orderNum < /dev/null
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
Adding choice to Non-Normal page

-----------------------------------------
Lets check if it valgrinds:
Valgrind was clean


1.17: Current test is ./cyoa-step1 test/size_t < /dev/null
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
Declaration order incorrect

-----------------------------------------
Lets check if it valgrinds:
Valgrind was clean


1.18: Current test is ./cyoa-step1 test/story3 < /dev/null
-----------------------------
You considered this a failure case:
Invalid digits from story.txt
But we did not.
No request to check for intermediate deadline completion on step 1

Step 2
Checking that cyoa-step2 compiles
rm -f *~ cyoa-step1 cyoa-step2 cyoa-step3  cyoa-step1.o cyoa-step2.o cyoa-step3.o cyoa.o
g++    -c -o cyoa-step2.o cyoa-step2.cpp
g++ -std=gnu++11 -pedantic -Wall -Werror -ggdb3 -c cyoa.cpp
g++ -o cyoa-step2 cyoa-step2.o cyoa.o
rm cyoa.o cyoa-step2.o
The code compiled (good)
Executable cyoa-step2 exists (good)
------------------------------------
Now running YOUR tests for step 2
------------------------------------


2.1: Current test is ./cyoa-step2  < /dev/null
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
Invalid input command

-----------------------------------------
Lets check if it valgrinds:
Valgrind was clean


2.2: Current test is ./cyoa-step2 story1 story2 < /dev/null
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
Invalid input command

-----------------------------------------
Lets check if it valgrinds:
Valgrind was clean


2.3: Current test is ./cyoa-step2 story1  <  /usr/local/ece551/cyoa/story1/inputs/input0.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean


2.4: Current test is ./cyoa-step2 story1  <  /usr/local/ece551/cyoa/story1/inputs/input1.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean


2.5: Current test is ./cyoa-step2 story1  <  /usr/local/ece551/cyoa/story1/inputs/input2.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean


2.6: Current test is ./cyoa-step2 story1  <  /usr/local/ece551/cyoa/story1/inputs/input3.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean


2.7: Current test is ./cyoa-step2 story1  <  /usr/local/ece551/cyoa/story1/inputs/input3.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean


2.8: Current test is ./cyoa-step2 story1  <  /usr/local/ece551/cyoa/story1/inputs/input5.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean


2.9: Current test is ./cyoa-step2 story1  <  /usr/local/ece551/cyoa/story1/inputs/input6.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean


2.10: Current test is ./cyoa-step2 story1  <  /usr/local/ece551/cyoa/story1/inputs/input7.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean


2.11: Current test is ./cyoa-step2 story1  <  /usr/local/ece551/cyoa/story1/inputs/input8.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean


2.12: Current test is ./cyoa-step2 story1  <  /usr/local/ece551/cyoa/story1/inputs/input9.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean


2.13: Current test is ./cyoa-step2 story1  <  /usr/local/ece551/cyoa/story1/inputs/input10.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean


2.14: Current test is ./cyoa-step2 story2  <  /usr/local/ece551/cyoa/story1/inputs/input0.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean


2.15: Current test is ./cyoa-step2 story2  <  /usr/local/ece551/cyoa/story1/inputs/input1.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean


2.16: Current test is ./cyoa-step2 story2  <  /usr/local/ece551/cyoa/story1/inputs/input3.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean


2.17: Current test is ./cyoa-step2 story2  <  /usr/local/ece551/cyoa/story1/inputs/input4.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean


2.18: Current test is ./cyoa-step2 story2  <  /usr/local/ece551/cyoa/story1/inputs/input5.txt
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
timeout: the monitored command dumped core
-----------------------------------------
Lets check if it valgrinds:
Valgrind reported errors:
==1044847== Memcheck, a memory error detector
==1044847== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1044847== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==1044847== Command: ./cyoa-step2 story2
==1044847== Parent PID: 1044846
==1044847== 


2.19: Current test is ./cyoa-step2 story2  <  /usr/local/ece551/cyoa/story1/inputs/input6.txt
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
timeout: the monitored command dumped core
-----------------------------------------
Lets check if it valgrinds:
Valgrind reported errors:
==1045179== Memcheck, a memory error detector
==1045179== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1045179== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==1045179== Command: ./cyoa-step2 story2
==1045179== Parent PID: 1045178
==1045179== 


2.20: Current test is ./cyoa-step2 story2  <  /usr/local/ece551/cyoa/story1/inputs/input7.txt
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
Input is not good

-----------------------------------------
Lets check if it valgrinds:
Valgrind was clean


2.21: Current test is ./cyoa-step2 story2  <  /usr/local/ece551/cyoa/story1/inputs/input8.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean


2.22: Current test is ./cyoa-step2 story2  <  /usr/local/ece551/cyoa/story1/inputs/input9.txt
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
timeout: the monitored command dumped core
-----------------------------------------
Lets check if it valgrinds:
Valgrind reported errors:
==1045335== Memcheck, a memory error detector
==1045335== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1045335== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==1045335== Command: ./cyoa-step2 story2
==1045335== Parent PID: 1045334
==1045335== 


2.23: Current test is ./cyoa-step2 story2  <  /usr/local/ece551/cyoa/story1/inputs/input10.txt
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
Input is not good

-----------------------------------------
Lets check if it valgrinds:
Valgrind was clean


2.24: Current test is ./cyoa-step2 story2  <  /usr/local/ece551/cyoa/story1/inputs/input11.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean


2.25: Current test is ./cyoa-step2 story2  <  /usr/local/ece551/cyoa/story1/inputs/input12.txt
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
timeout: the monitored command dumped core
-----------------------------------------
Lets check if it valgrinds:
Valgrind reported errors:
==1045654== Memcheck, a memory error detector
==1045654== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1045654== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==1045654== Command: ./cyoa-step2 story2
==1045654== Parent PID: 1045653
==1045654== 


2.26: Current test is ./cyoa-step2 story1  <  /usr/local/ece551/cyoa/story2/inputs/input11.txt
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
/dev/fd/3: line 528: /usr/local/ece551/cyoa/story2/inputs/input11.txt: No such file or directory
-----------------------------------------
Lets check if it valgrinds:
Valgrind reported errors:
==1045654== Memcheck, a memory error detector
==1045654== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1045654== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==1045654== Command: ./cyoa-step2 story2
==1045654== Parent PID: 1045653
==1045654== 
No request to check for intermediate deadline completion on step 2

Step 3
Checking that cyoa-step3 compiles
rm -f *~ cyoa-step1 cyoa-step2 cyoa-step3  cyoa-step1.o cyoa-step2.o cyoa-step3.o cyoa.o
g++    -c -o cyoa-step3.o cyoa-step3.cpp
g++ -std=gnu++11 -pedantic -Wall -Werror -ggdb3 -c cyoa.cpp
g++ -o cyoa-step3 cyoa-step3.o cyoa.o
rm cyoa.o cyoa-step3.o
The code compiled (good)
Executable cyoa-step3 exists (good)
------------------------------------
Now running YOUR tests for step 3
------------------------------------


3.1: Current test is ./cyoa-step3 story1 < /dev/null
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean


3.2: Current test is ./cyoa-step3 story2 < /dev/null
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean


3.3: Current test is ./cyoa-step3 story1 story2 < /dev/null
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
Invalid input command

-----------------------------------------
Lets check if it valgrinds:
Valgrind was clean


3.4: Current test is ./cyoa-step3  < /dev/null
-----------------------------
Great: we both considered this an error
----here is what you printed on stderr---
Invalid input command

-----------------------------------------
Lets check if it valgrinds:
Valgrind was clean
------------------------------------
You have requested that we check for intermediate deadline completion on step 3
------------------------------------

Step 3 EC intermediate deadline test 1
===========================================================
./cyoa-step3 /usr/local/ece551/cyoa/story1
Valgrind was clean for this testcase
You have passed this test case

Step 3 EC intermediate deadline test 2
===========================================================
./cyoa-step3 /usr/local/ece551/cyoa/story2
Valgrind was clean for this testcase
You have passed this test case
Intermediate deadline requirements for Step 3 passed at Mon Dec  4 02:40:00 PM EST 2023

Step 4
Checking that cyoa-step4 compiles
rm -f *~ cyoa-step1 cyoa-step2 cyoa-step3  cyoa-step1.o cyoa-step2.o cyoa-step3.o cyoa.o
The code did not compile!

Overall Grade: NO GRADE YET
